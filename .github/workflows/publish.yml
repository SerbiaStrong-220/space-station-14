name: Publish

concurrency:
  group: publish
  cancel-in-progress: true

on:
  workflow_dispatch:
  #schedule:
    # - cron: '0 1 * * *'

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
  # SS220 Discord Notifier bgn
    - name: SS220 PN2D - Start # PN2D - Publish notify to Discord
      env:
        DISCORD_PUBLISH_NOTIFY: ${{ secrets.DISCORD_PUBLISH_NOTIFY }}
      run: |
        curl -X POST -H "Content-Type: application/json" \
        -d '{"username": "GitHub Publish Changes", "avatar_url": "https://raw.githubusercontent.com/SerbiaStrong-220/space-station-14/refs/heads/master/logo.png", "content": "<a:nian:1179921939301670992> Запущено обновление по `${{GITHUB.REF_NAME}}` ветке!"}' \
        $DISCORD_PUBLISH_NOTIFY
  # SS220 Discord Notifier end
    - name: Fail if we are attempting to run on the master branch
      if: ${{GITHUB.REF_NAME == 'master' && github.repository == 'SerbiaStrong-220/space-station-14'}}
      run: exit 1

  # SS220 custom install start
   # - name: Install dependencies
   #   run: sudo apt-get install -y python3-paramiko python3-lxml
  # SS220 custom install end

    - uses: actions/checkout@v4.2.2
      with:
        submodules: 'recursive'

    # Corvax-Secrets-Start
    #- name: Setup secrets
    #  env:
    #    SSH_KEY: ${{ secrets.SECRETS_PRIVATE_KEY }}
    #  if: ${{ env.SSH_KEY != '' }}
    #  run: |
    #    mkdir ~/.ssh
    #    echo "${{ secrets.SECRETS_PRIVATE_KEY }}" > ~/.ssh/id_rsa
    #    chmod 600 ~/.ssh/id_rsa
    #    echo "HOST *" > ~/.ssh/config
    #    echo "StrictHostKeyChecking no" >> ~/.ssh/config
    #    git -c submodule.Secrets.update=checkout submodule update --init
    #    cp -R Secrets/Prototypes Resources/Prototypes/CorvaxSecrets
    #    cp -R Secrets/ServerPrototypes Resources/Prototypes/CorvaxSecretsServer
    # Corvax-Secrets-End

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4.1.0
      with:
        dotnet-version: 9.0.x

    - name: Get Engine Tag
      run: |
        cd RobustToolbox
        git fetch --depth=1

    - name: Install dependencies
      run: dotnet restore

    - name: Build Packaging
      run: dotnet build Content.Packaging --configuration Release --no-restore /m

    - name: Package server
      run: dotnet run --project Content.Packaging server --platform win-x64 --platform linux-x64 --platform osx-x64 --platform linux-arm64

    - name: Package client
      run: dotnet run --project Content.Packaging client --no-wipe-release

    - name: Publish version
      run: Tools/publish_multi_request.py
      env:
        PUBLISH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
        GITHUB_REPOSITORY: ${{ vars.GITHUB_REPOSITORY }}
  # SS220 Discord Notifier bgn
    - name: SS220 PN2D - End
      if: success()
      env:
        DISCORD_PUBLISH_NOTIFY: ${{ secrets.DISCORD_PUBLISH_NOTIFY }}
      run: |
        curl -X POST -H "Content-Type: application/json" \
        -d '{"username": "GitHub Publish Changes", "avatar_url": "https://raw.githubusercontent.com/SerbiaStrong-220/space-station-14/refs/heads/master/logo.png", "content": "✅ Успешно обновление по `${{GITHUB.REF_NAME}}` ветке!"}' \
        $DISCORD_PUBLISH_NOTIFY
    - name: SS220 PN2D - Failure
      if: failure()
      env:
        DISCORD_PUBLISH_NOTIFY: ${{ secrets.DISCORD_PUBLISH_NOTIFY }}
      run: |
        curl -X POST -H "Content-Type: application/json" \
        -d '{"username": "GitHub Publish Changes", "avatar_url": "https://raw.githubusercontent.com/SerbiaStrong-220/space-station-14/refs/heads/master/logo.png", "content": "❌ Неуспешно обновление по `${{GITHUB.REF_NAME}}` ветке!"}' \
        $DISCORD_PUBLISH_NOTIFY
# SS220 Discord Notifier end

# SS220 temp disable discord publish
    # - name: Publish changelog (Discord)
    #   continue-on-error: true
    #   run: Tools/actions_changelogs_since_last_run.py
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     DISCORD_WEBHOOK_URL: ${{ secrets.CHANGELOG_DISCORD_WEBHOOK }}

    # - name: Publish changelog (RSS)
    #   continue-on-error: true
    #   run: Tools/actions_changelog_rss.py
    #   env:
    #     CHANGELOG_RSS_KEY: ${{ secrets.CHANGELOG_RSS_KEY }}
