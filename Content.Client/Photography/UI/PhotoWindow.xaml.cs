using System.Numerics;
using Content.Shared.Photography;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Photography.UI;
[GenerateTypedNameReferences]
public sealed partial class PhotoWindow : BaseWindow
{
    private readonly FixedEye _defaultEye = new();

    public PhotoWindow()
    {
        RobustXamlLoader.Load(this);

        CloseButton.OnPressed += _ => Close();

        CameraView.Eye = _defaultEye;
        CameraView.ViewportSize = new Vector2i(500, 500);
    }

    public void SetVisuals(EyeComponent eye)
    {
        CameraView.Eye = eye.Eye;
    }

    // Drag by grabbing anywhere
    protected override DragMode GetDragModeFor(Vector2 relativeMousePos)
    {
        return DragMode.Move;
    }
}
