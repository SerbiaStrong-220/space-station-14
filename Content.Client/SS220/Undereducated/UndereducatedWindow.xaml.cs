// Â© SS220, An EULA/CLA with a hosting restriction, full text: https://raw.githubusercontent.com/SerbiaStrong-220/space-station-14/master/CLA.txt

using Content.Shared.SS220.Undereducated;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.SS220.Undereducated;

[GenerateTypedNameReferences]
public sealed partial class UndereducatedWindow : DefaultWindow
{
    private readonly List<string> _spokenLanguages;
    private int _secret = 0;

    public string SelectedLanguage { get; private set; }
    public float SelectedChance { get; private set; }

    public UndereducatedWindow(UndereducatedComponent comp, List<string> langList)
    {
        IoCManager.InjectDependencies(this);
        RobustXamlLoader.Load(this);

        _spokenLanguages = langList;
        SelectedLanguage = comp.Language;
        SelectedChance = comp.ChanseToReplace;

        InitializeUi();
    }

    private void InitializeUi()
    {
        foreach (var language in _spokenLanguages)
        {
            LanguageOption.AddItem(language);
        }

        var langIndex = _spokenLanguages.IndexOf(SelectedLanguage);
        if (langIndex >= 0)
        {
            LanguageOption.Select(langIndex);
        }

        LanguageOption.OnItemSelected += args =>
        {
            LanguageOption.Select(args.Id);
            SelectedLanguage = _spokenLanguages[LanguageOption.SelectedId];

            // easter egg
            _secret++;
            if (_secret == 30)
            {
                LanguageLabel.Text = $"{Loc.GetString("window-undereducated-language-option-label")} " + $"{Loc.GetString("window-undereducated-language-option-label-secret")}";
            }
        };

        PercentLabel.Text = $"{Loc.GetString("window-undereducated-percent-slider-label")} {Math.Round(ChanceSlider.Value, 2)}%";

        ChanceSlider.OnValueChanged += args =>
        {
            PercentLabel.Text = $"{Loc.GetString("window-undereducated-percent-slider-label")} {Math.Round(args.Value, 2)}%";
            SelectedChance = 1f - args.Value / 100f;
        };

        SubmitButton.OnPressed += _ =>
        {
            Close();
        };

        OnClose += () =>
        {
            SelectedLanguage = _spokenLanguages[LanguageOption.SelectedId];
            SelectedChance = 1f - ChanceSlider.Value / 100f;
        };
    }
}
