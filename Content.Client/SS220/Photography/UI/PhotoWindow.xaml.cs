// Â© SS220, An EULA/CLA with a hosting restriction, full text: https://raw.githubusercontent.com/SerbiaStrong-220/space-station-14/master/CLA.txt
using System.Numerics;
using Content.Client.Message;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using SixLabors.ImageSharp;
using SixLabors.ImageSharp.PixelFormats;

namespace Content.Client.SS220.Photography.UI;
[GenerateTypedNameReferences]
public sealed partial class PhotoWindow : BaseWindow
{
    [Dependency] private readonly IClyde _displayManager = default!;

    private readonly FixedEye _defaultEye = new();
    public Action? ScreenshotComplete;

    public PhotoWindow()
    {
        IoCManager.InjectDependencies(this);
        RobustXamlLoader.Load(this);

        CloseButton.OnPressed += _ => Close();

        PhotoView.Eye = _defaultEye;
        PhotoView.Visible = false;
        PhotoView.ViewportSize = new Vector2i(500, 500);

        BackText.SetMarkup("Written on the back:\n[italic]Test test test[/italic]");
    }

    public void PostScreenshot(Image<Rgba32> image)
    {
        var rgba32Image = image.CloneAs<Rgba32>(SixLabors.ImageSharp.Configuration.Default);
        PhotoViewStatic.Texture = _displayManager.LoadTextureFromImage(rgba32Image);
        PhotoViewStatic.Visible = true;
        PhotoView.Visible = false;
        PhotoView.Eye = null;
        ScreenshotComplete?.Invoke();
    }

    public void SetVisuals(EyeComponent? eye)
    {
        PhotoView.Visible = eye != null;

        if (eye != null)
        {
            PhotoView.Eye = eye.Eye;
            PhotoView.Screenshot(PostScreenshot);
        }
        else
        {
            PhotoView.Eye = _defaultEye;
            LoadingTextLabel.Text = Loc.GetString("photo-failed-text-label");
        }
    }

    // Drag by grabbing anywhere
    protected override DragMode GetDragModeFor(Vector2 relativeMousePos)
    {
        return DragMode.Move;
    }
}
