// Â© SS220, An EULA/CLA with a hosting restriction, full text: https://raw.githubusercontent.com/SerbiaStrong-220/space-station-14/master/CLA.txt
using Content.Client.SS220.UserInterface.Utility;
using Content.Client.SS220.Zones.Systems;
using Content.Client.Stylesheets;
using Content.Shared.SS220.Zones.Components;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.SS220.Zones.UI;

[GenerateTypedNameReferences]
public sealed partial class ZoneEntry : ContainerButton
{
    [Dependency] private readonly IEntityManager _entityManager = default!;

    private readonly ZonesSystem _zones;

    public Entity<ZoneComponent> ZoneEntity;

    private readonly Dictionary<uint, ConfirmableButtonState> _confirmableButtonStates = new()
    {
        [0] = new ConfirmableButtonState(Loc.GetString("zone-container-entry-delete-container-button"), null),
        [1] = new ConfirmableButtonState(Loc.GetString("zones-control-are-you-sure"), StyleNano.ButtonColorCautionDefault)
    };

    public ZoneEntry(Entity<ZoneComponent> entity)
    {
        IoCManager.InjectDependencies(this);
        RobustXamlLoader.Load(this);

        _zones = _entityManager.System<ZonesSystem>();
        ZoneEntity = entity;

        BackgroundPanel.PanelOverride = new StyleBoxFlat { BackgroundColor = Color.FromHex("#2F2F3B") };
        AddStyleClass(StyleClassButton);
        DeleteZoneButton.SetClickState(_confirmableButtonStates);
        DeleteZoneButton.OnConfirmed += () => _zones.ExecuteDeleteZone(ZoneEntity.Owner);

        Refresh();
    }

    public void Refresh()
    {
        IDLabel.Text = _entityManager.GetNetEntity(ZoneEntity).ToString();
        NameLabel.Text = string.IsNullOrEmpty(ZoneEntity.Comp.ZoneParams.Name) ? "Unknown" : ZoneEntity.Comp.ZoneParams.Name;
    }

    public string GetFilteringString()
    {
        return $"{IDLabel.Text} {NameLabel.Text}";
    }
}
