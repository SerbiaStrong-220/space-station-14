using Content.Shared.SS220.FastUI;
using Robust.Client.AutoGenerated;
using Robust.Client.GameObjects;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;
using Robust.Shared.Utility;

namespace Content.Client.SS220.FastUI;

[GenerateTypedNameReferences]
public sealed partial class SecretListingEntry : Control
{
    [Dependency] private readonly IEntitySystemManager _entity = default!;
    private readonly SpriteSystem _sprite;

    public Action<ListingData>? OnItemSelected;

    private string? _id;
    private SpriteSpecifier? _iconSprite;
    private ButtonState _buttonState;

    public SecretListingEntry()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        _sprite = _entity.GetEntitySystem<SpriteSystem>();

        SelectButton.OnPressed += OnSelected;
    }

    private void OnSelected(Button.ButtonEventArgs args)
    {
        if (_id == null)
            return;

        var data = new ListingData(
            _id,
            ListingName.Text ?? "",
            ListingDescription.Text ?? "",
            ListingSubDescription.Text ?? "",
            SelectButton.Text ?? "",
            _buttonState,
            _iconSprite
        );

        OnItemSelected?.Invoke(data);
    }

    public void SetData(ListingData data)
    {
        _id = data.ID;
        ListingName.Text = data.Title;
        ListingDescription.Text = data.Description;
        ListingSubDescription.Text = data.SubDescription;
        _iconSprite = data.Icon;
        ListingIcon.Texture = data.Icon != null ? _sprite.Frame0(data.Icon) : null;
        _buttonState = data.ButtonState;
        SelectButton.Text = data.ButtonText;
    }

    public void SetData(SecretListingPrototype proto)
    {
        _id = proto.ID;
        ListingName.Text = proto.Title;
        ListingDescription.Text = proto.Description;
        ListingSubDescription.Text = proto.SubDescription;
        _iconSprite = proto.Icon;
        ListingIcon.Texture = proto.Icon != null ? _sprite.Frame0(proto.Icon) : null;
        _buttonState = (ButtonState)proto.ButtonState;
        SelectButton.Text = proto.ButtonText;
    }
}
