using Content.Client.UserInterface.Controls;
using Content.Shared.SS220.FastUI;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;

namespace Content.Client.SS220.FastUI;

[GenerateTypedNameReferences]
public sealed partial class SecretListingWindow : FancyWindow
{
    [Dependency] private readonly IPrototypeManager _prototypeManager = default!;

    public Action<ListingData>? OnItemSelected;

    public SecretListingWindow()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);
    }

    private void OnEntrySelected(ListingData data)
    {
        OnItemSelected?.Invoke(data);
    }

    public void Populate(List<ListingData> dataList)
    {
        ListingsContainer.RemoveAllChildren();

        foreach (var data in dataList)
        {
            var entry = new SecretListingEntry();
            entry.SetData(data);
            entry.OnItemSelected += OnEntrySelected;
            ListingsContainer.AddChild(entry);
        }
    }

    public void Populate(HashSet<ProtoId<SecretListingPrototype>> dataSet)
    {
        ListingsContainer.RemoveAllChildren();

        foreach (var id in dataSet)
        {
            var proto = _prototypeManager.Index(id);
            var entry = new SecretListingEntry();
            entry.SetData(proto);
            entry.OnItemSelected += OnEntrySelected;
            ListingsContainer.AddChild(entry);
        }
    }
}
