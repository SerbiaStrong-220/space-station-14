// © SS220, An EULA/CLA with a hosting restriction, full text: https://raw.githubusercontent.com/SerbiaStrong-220/space-station-14/master/CLA.txt

using System.Linq;
using Content.Client.UserInterface.Controls;
using Content.Shared.Body.Systems;
using Content.Shared.SS220.Medicine.Injury.Components;
using Content.Shared.SS220.Medicine.Injury.Systems;
using Content.Shared.SS220.Medicine.Surgery;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.SS220.Medicine.Selector;

[GenerateTypedNameReferences]
public sealed partial class LimbSelectorLayout : FancyWindow
{
    public Action<NetEntity>? OnContainedEntityButtonPressed;

    [Dependency] private readonly IEntitySystemManager _sysMan = default!;
    [Dependency] private readonly IEntityManager _entity = default!;
    [Dependency] private readonly EntityManager _entMan = default!;
    public LimbSelectorLayout()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);
    }

    public void UpdatePanels(InstrumentUsedAfterInteractEvent msg)
    {
        var entuid = _entMan.GetEntity(msg.Target);
        var sharedBody = _sysMan.GetEntitySystem<SharedBodySystem>();
        var limbs = sharedBody.GetBodyChildren(entuid).ToArray();
        foreach (var limb in limbs)
        {
            var netentuid = _entMan.GetNetEntity(limb.Id);
            var limbbtn = new ContainedEntityCardControl(_entMan.GetEntityData(netentuid).Item2.EntityName);
            limbbtn.OnPressed += () => OnContainedEntityButtonPressed?.Invoke(netentuid);
            AvailableLimbsContainer.AddChild(limbbtn);

            // Не видит список повреждений на конечности
            var sharedInjury = _sysMan.GetEntitySystem<SharedInjurySystem>();
            var injuries = _entMan.GetComponent<InjuriesContainerComponent>(limb.Id).Injuries;

            if (injuries != null)
            {
                foreach (var injury in injuries.ToArray())
                {
                    var netinjuryid = _entMan.GetNetEntity(injury);
                    var injurybtn = new ContainedEntityCardControl(_entMan.GetEntityData(netinjuryid).Item2.EntityName);
                    InjuriesContainer.AddChild(injurybtn);
                }
            };
        }
    }

}