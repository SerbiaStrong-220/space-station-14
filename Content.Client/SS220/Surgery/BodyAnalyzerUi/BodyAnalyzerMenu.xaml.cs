// Â© SS220, An EULA/CLA with a hosting restriction, full text: https://raw.githubusercontent.com/SerbiaStrong-220/space-station-14/master/CLA.txt

using Content.Client.UserInterface.Controls;
using Content.Shared.SS220.Surgery.Graph;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;

namespace Content.Client.SS220.Surgery.BodyAnalyzerUi;

[GenerateTypedNameReferences]
public sealed partial class BodyAnalyzerMenu : FancyWindow
{
    private SurgeryPatientAnalyzer _surgeryPatientAnalyzer = default!;

    public BodyAnalyzerMenu()
    {
        RobustXamlLoader.Load(this);

        OperationList.OnSurgeryClicked += (id, pressed) =>
        {
            OperationDescription.ShowDescription(id);
            // TODO check it qol
            OperationDescription.DataLocked = pressed;
            OperationDescription.Visible = true;
        };

        OperationList.OnSurgeryHovered += (id) =>
        {
            OperationDescription.ShowDescription(id);
            OperationDescription.Visible = true;
        };
    }

    public void InjectDependencies(IEntityManager entityManager)
    {
        _surgeryPatientAnalyzer = entityManager.System<SurgeryPatientAnalyzer>();

        OperationDescription.InjectDependencies(entityManager);
    }

    public void ChangeTarget(EntityUid target, ProtoId<SurgeryGraphPrototype>? id = null)
    {
        var status = _surgeryPatientAnalyzer.GetStatus(target);
        PatientStatus.ShowStatus(status);
        TreatmentSuggestion.ShowSuggestion(_surgeryPatientAnalyzer.GetTreatmentRecommendation(status));

        if (!id.HasValue)
        {
            OperationDescription.Visible = false;
            return;
        }

        OperationDescription.Visible = true;
        OperationDescription.ShowDescription(id.Value);
    }

    public void UpdatePerformer()
    {
        OperationList.MakeList(false);
    }
}
