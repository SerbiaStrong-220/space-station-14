// Â© SS220, An EULA/CLA with a hosting restriction, full text: https://raw.githubusercontent.com/SerbiaStrong-220/space-station-14/master/CLA.txt

using Content.Client.UserInterface.Controls;
using Content.Shared.Ghost;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;
using System.Linq;
using System.Numerics;
using FancyWindow = Content.Client.UserInterface.Controls.FancyWindow;

namespace Content.Client.SS220.CultYogg.MiGo.UI;

[GenerateTypedNameReferences]
public sealed partial class MiGoTeleportMenu : FancyWindow
{

    private List<(string, NetEntity)> _cultists = [];

    public event Action<GUIBoundKeyEventArgs, ListData>? OnItemSelected;

    public MiGoTeleportMenu()
    {
        MinSize = new Vector2(250, 150);
        SetSize = new Vector2(450, 150);
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        MiGoTeleportContents.SearchBar = SearchBar;
        //MiGoTeleportContents.DataFilterCondition += DataFilterCondition;
        //MiGoTeleportContents.GenerateItem += GenerateButton;
        MiGoTeleportContents.ItemKeyBindDown += (args, data) => OnItemSelected?.Invoke(args, data);
    }

    public void Populate(IEnumerable<GhostWarp> warps)
    {
        // Server COULD send these sorted but how about we just use the client to do it instead
        _cultists = warps
            .OrderBy(w => w.IsWarpPoint)
            .ThenBy(w => w.DisplayName, Comparer<string>.Create(
                (x, y) => string.Compare(x, y, StringComparison.Ordinal)))
            .Select(w =>
            {
                var name = w.IsWarpPoint
                    ? Loc.GetString("ghost-target-window-current-button", ("name", w.DisplayName))
                    : w.DisplayName;

                return (name, w.Entity);
            })
            .ToList();
    }
}
