using System.Linq;
using System.Numerics;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;
using FancyWindow = Content.Client.UserInterface.Controls.FancyWindow;
using Robust.Client.UserInterface;
using Content.Client.UserInterface.Controls;
using Content.Shared.IdentityManagement;
using Robust.Client.Graphics;
using Robust.Shared.Utility;

namespace Content.Client.SS220.CultYogg.MiGo.UI;

[GenerateTypedNameReferences]
public sealed partial class MiGoTeleportMenu : FancyWindow
{
    [Dependency] private readonly IPrototypeManager _prototypeManager = default!;
    [Dependency] private readonly IEntityManager _entityManager = default!;

    private readonly Dictionary<string, EntityUid> _dummies = [];
    private readonly Dictionary<string, (ListContainerButton Button, MiGoTeleportTarget Item)> _listItems = new();

    public event Action<GUIBoundKeyEventArgs, ListData>? OnItemSelected;

    public MiGoTeleportMenu()
    {
        MinSize = new Vector2(250, 150);
        SetSize = new Vector2(450, 150);
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        MiGoTeleportContents.SearchBar = SearchBar;
        //MiGoTeleportContents.DataFilterCondition += DataFilterCondition;
        //MiGoTeleportContents.GenerateItem += GenerateButton;
        MiGoTeleportContents.ItemKeyBindDown += (args, data) => OnItemSelected?.Invoke(args, data);
    }
}
