// Â© SS220, An EULA/CLA with a hosting restriction, full text: https://raw.githubusercontent.com/SerbiaStrong-220/space-station-14/master/CLA.txt

using Content.Shared.SS220.CultYogg.MiGo;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using System.Numerics;
using static Robust.Client.UserInterface.Controls.BaseButton;
using FancyWindow = Content.Client.UserInterface.Controls.FancyWindow;

namespace Content.Client.SS220.CultYogg.MiGo.UI;

[GenerateTypedNameReferences]
public sealed partial class MiGoTeleportMenu : FancyWindow
{
    public List<(string, NetEntity?)> Warps = [];
    public event Action<ButtonEventArgs>? OnTeleportToTarget;

    public MiGoTeleportMenu()
    {
        MinSize = new Vector2(256, 333);
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        SearchBar.OnTextChanged += OnSearchTextChanged;
    }

    public void Update(MiGoTeleportBuiState state)
    {
        Warps = state.Warps;
        PopulateList();
    }

    private void ClearAllTargets()
    {
        TeleportListingsContainer.Children.Clear();
    }

    private void PopulateList()
    {
        ClearAllTargets();
        foreach (var (name, netEnt) in Warps)
        {
            if (netEnt == null)
                continue;

            if (SearchBar.Text != "" && !name.Contains(SearchBar.Text, StringComparison.OrdinalIgnoreCase))
                continue;

            var target = new MiGoTeleportTarget(name, netEnt);
            target.Teleport.OnPressed += (args) => { OnTeleportToTarget?.Invoke(args); };
            TeleportListingsContainer.AddChild(target);
        }
    }

    public void OnSearchTextChanged(LineEdit.LineEditEventArgs args)
    {
        PopulateList();
        TeleportListingsScroll.SetScrollValue(Vector2.Zero);
    }
}
