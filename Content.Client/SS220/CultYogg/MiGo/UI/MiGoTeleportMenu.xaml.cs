// Â© SS220, An EULA/CLA with a hosting restriction, full text: https://raw.githubusercontent.com/SerbiaStrong-220/space-station-14/master/CLA.txt

using Content.Shared.Ghost;
using Content.Shared.SS220.CultYogg.MiGo;
using Content.Shared.Store;
using JetBrains.Annotations;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.XAML;
using System.Linq;
using System.Numerics;
using System.Reflection;
using System.Xml.Linq;
using static Robust.Client.UserInterface.Controls.BaseButton;
using FancyWindow = Content.Client.UserInterface.Controls.FancyWindow;

namespace Content.Client.SS220.CultYogg.MiGo.UI;

[GenerateTypedNameReferences]
public sealed partial class MiGoTeleportMenu : FancyWindow
{
    public event Action<ButtonEventArgs>? OnTeleportToTarget;
    public event Action<ButtonEventArgs>? OnSpectate;
    public MiGoTeleportMenu()
    {
        MinSize = new Vector2(256, 320);
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);
    }

    public void Update(EntityUid uid, MiGoTeleportBuiState state)
    {
        ClearAllTargets();
        foreach (var (name, netEnt) in state.Warps)
        {
            if (netEnt == null)
                continue;

            var target = new MiGoTeleportTarget(name, netEnt);
            target.Teleport.OnPressed += (args) => { OnTeleportToTarget?.Invoke(args); };
            target.Spectate.OnPressed += (args) => { OnSpectate?.Invoke(args); };
            StoreListingsContainer.AddChild(target);
        }
    }

    private void ClearAllTargets()
    {
        StoreListingsContainer.Children.Clear();
    }
}
