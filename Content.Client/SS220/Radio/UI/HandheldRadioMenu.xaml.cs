// Â© SS220, An EULA/CLA with a hosting restriction, full text: https://raw.githubusercontent.com/SerbiaStrong-220/space-station-14/master/CLA.txt
using Content.Client.UserInterface.Controls;
using Content.Shared.SS220.Radio;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.XAML;

using Content.Shared.Radio;
using Robust.Shared.Prototypes;

namespace Content.Client.SS220.Radio.UI;

[GenerateTypedNameReferences]
public sealed partial class HandheldRadioMenu : FancyWindow
{
    public event Action<bool>? OnMicPressed;
    public event Action<bool>? OnSpeakerPressed;
    public event Action<string>? OnChannelSelected;
    public bool Opened = false;

    [Dependency] private readonly IPrototypeManager _prototype = default!;
    public HandheldRadioMenu()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        Channel.InitDefaultButtons();
        MicButton.OnPressed += args => OnMicPressed?.Invoke(args.Button.Pressed);
        SpeakerButton.OnPressed += args => OnSpeakerPressed?.Invoke(args.Button.Pressed);
        Channel.ValueChanged += args => OnChannelSelected?.Invoke(String.Format("Handheld{0}", Channel.Value % 1390));
    }

    public void Update(HandheldRadioBoundUIState state)
    {
        MicButton.Pressed = state.MicEnabled;
        SpeakerButton.Pressed = state.SpeakerEnabled;
    }
    public void SetChannel(int msg)
    {
        if (msg == Channel.Value || Opened)
            return;

        Channel.Value = msg;
        Opened = true;
    }
    public void SetChannelDesc(int lower, int upper)
    {
        ChannelsDesc.Text = Loc.GetString("handheld-radio-component-flavor-text-left", ("lower", lower.ToString()), ("upper", upper.ToString()));
    }
}
