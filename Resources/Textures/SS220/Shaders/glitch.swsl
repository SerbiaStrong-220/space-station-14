/*
	Glitch Effect Shader by Yui Kinomoto @arlez80

	MIT License
*/

uniform highp float shake_power;
uniform highp float shake_rate;
uniform highp float shake_speed;
uniform highp float shake_block_size;
uniform highp float shake_color_rate;

highp float random(highp float seed)
{
	return fract(543.2543 * sin(dot( vec2(seed, seed), vec2(3525.46, -54.3415))));
}

void fragment()
{
	highp float enable_shift = float(random(trunc(TIME * shake_speed)) < shake_rate);

	highp vec2 fixed_uv = UV;
	fixed_uv.x += (
		random(
			( trunc( UV.y * shake_block_size ) / shake_block_size )
		+	TIME
		) - 0.5
	) * shake_power * enable_shift;

	highp vec4 pixel_color = zTexture(fixed_uv);
	pixel_color.r = mix(
		pixel_color.r,
        zTexture(fixed_uv + vec2( shake_color_rate, 0.0 )).r,
        enable_shift
	);
	pixel_color.b = mix(
		pixel_color.b,
        zTexture(fixed_uv + vec2( -shake_color_rate, 0.0 )).b,
        enable_shift
	);

	COLOR = pixel_color;
}
